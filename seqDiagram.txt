@startuml
UrbanAreaManager -> WebApp: 1: startApplication()
WebApp -> Authenticator: 2: login(userID, password)
Authenticator -> Authenticator: 3: validateUser(userID, password)
UrbanAreaManager -> DashProvider: 4: getDashboard()
DashProvider -> DataProcessing: 5: retrieveLatestReport()

loop every day
    DataProcessing -> TransportationAdapter: retrieveAvailableTransportation
    DataProcessing <-- TransportationAdapter: list[transportationId]
    DataProcessing -> SensorsDataHandler: getCachedData(timePeriod=1day)
    SensorsDataHandler -> SensorsDataDB: query(timePeriod=1day) 
    SensorsDataHandler <-- SensorsDataDB: sensorsData
    DataProcessing <-- SensorsDataHandler: sensorsData
    DataProcessing -> DataProcessing: generateReport(routesData, sensorsData)

    DataProcessing -> CriticalMonitor: checkAnomalies(report)

end

alt If critical situation detected 
    UrbanAreaManager <-- CriticalMonitor: notifyCriticalSituation(info)
end

DashProvider <-- DataProcessing: 6: report
UrbanAreaManager <-- DashProvider: 7: dashboard



/'
'/
@enduml